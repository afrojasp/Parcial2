[{"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\index.js":"1","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\serviceWorkerRegistration.js":"2","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\App.js":"3","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\reportWebVitals.js":"4","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\itemList.js":"5","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\item.js":"6","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\Item.js":"7"},{"size":827,"mtime":1607123997053,"results":"8","hashOfConfig":"9"},{"size":5060,"mtime":1607125304454,"results":"10","hashOfConfig":"9"},{"size":555,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":364,"mtime":499162500000,"results":"12","hashOfConfig":"9"},{"size":1531,"mtime":1607125857177,"results":"13","hashOfConfig":"9"},{"size":562,"mtime":1607122944705,"results":"14","hashOfConfig":"15"},{"size":562,"mtime":1607122944705,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"1vxjdxu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ehfzjb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\index.js",["36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport ItemList from './components/itemList'\n\n\n\nReactDOM.render(\n\n    <ItemList />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["37","38"],"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\serviceWorkerRegistration.js",["39"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { useEffect } from \"react\";\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ( 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\App.js",[],"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\reportWebVitals.js",[],"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\itemList.js",["40","41"],"import React from 'react';\r\nimport Item from \"./Item\";\r\nimport axios from 'axios';\r\n\r\nexport default class itemList extends React.Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.espanol = [];\r\n  }\r\n  \r\n  \r\n  state ={\r\n    dataEs: []\r\n  };\r\n  \r\n  \r\n  async obtenerJsonEs() {\r\n    if(navigator)\r\n    await fetch(`https://gist.githubusercontent.com/jhonatan89/e379fadf8ed0f5381a2d8f8f3dea90c3/raw/e2bc20df02828d297f99558551e37959ac97a6f8/pokemon-es.json`)\r\n          .then(res => res.json())\r\n          .then(dataEs=>{\r\n            this.espanol = dataEs\r\n            this.setState({dataEs})\r\n            if(this.espanol.length > 0){\r\n              localStorage.setItem('pokeEsp', this.espanol)\r\n            }\r\n            \r\n          } )\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    if(this.state.dataEs.length == 0){\r\n      this.obtenerJsonEs();\r\n    }\r\n    //this.obtenerJsonEs();\r\n    //console.log(this.state.dataEs)\r\n    return (\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Image</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Height</th>\r\n              <th scope=\"col\">Weight</th>\r\n              <th scope=\"col\">Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              {this.state.dataEs.map( (e,i) => <Item key={i} item={e}/>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\item.js",[],"E:\\Universidad de los Andes\\Septimo Semestre\\Programacion con tecnologias web\\ParcialFinal\\my-app\\src\\components\\Item.js",["42"],"import React from 'react';\r\n\r\n\r\n\r\nexport default class Item extends React.Component {\r\n\r\n  \trender() {\r\n  \t\treturn (\r\n  \t\t\t<tr>\r\n  \t\t\t\t<th scope=\"row\">{this.props.item.id}</th>\r\n      \t\t\t  <td><img src={this.props.item.ThumbnailImage}/></td>\r\n                  <td>{this.props.item.name}</td>\r\n                  <td>{this.props.item.description}</td>\r\n                  <td>{this.props.item.height}</td>\r\n                  <td>{this.props.item.weight}</td>\r\n                  <td>{this.props.item.type}</td>\r\n                  \r\n  \t\t\t\t\r\n  \t\t\t</tr>\r\n  \t\t);\r\n\t}\r\n}",{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":11},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":19},{"ruleId":"43","severity":1,"message":"52","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":35,"column":33,"nodeType":"55","messageId":"56","endLine":35,"endColumn":35},{"ruleId":"57","severity":1,"message":"58","line":11,"column":16,"nodeType":"59","endLine":11,"endColumn":59},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'useEffect' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]